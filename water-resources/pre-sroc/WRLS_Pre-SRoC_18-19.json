{
	"info": {
		"_postman_id": "9a8825d2-26d5-4129-b5b8-e79a52be6be9",
		"name": "WRLS_Pre_SRoC_18/19",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "WRLS_Pre_SRoC_18/19",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Charge value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"COMPARE ACTUAL RESPONSE FROM THE RULES SERVICE WITH THE EXPECTED RESPONSE FROM EXCEL:-\");\r",
							"    console.log(\"Excel Charge value = \" + data.expChargeValue);\r",
							"    console.log(\"Rules Engine Charge value = \" + jsonData.WRLSChargingResponse.chargeValue);\r",
							"    pm.expect(jsonData.WRLSChargingResponse.chargeValue).to.eql(data.expChargeValue);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct Standard Unit Charge Factor\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Excel Standard Unit Charge Factor = \" + data.expSUCFactor);\r",
							"    console.log(\"Rules Engine Standard Unit Charge Factor = \" + jsonData.WRLSChargingResponse.sucFactor);\r",
							"    pm.expect(jsonData.WRLSChargingResponse.sucFactor).to.eql(data.expSucFactor);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct Volume Factor\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Excel Volume Factor = \" + data.expVolumeFactor);\r",
							"   console.log(\"Rules Engine Volume Factor = \" + jsonData.WRLSChargingResponse.volumeFactor);\r",
							"    pm.expect(jsonData.WRLSChargingResponse.volumeFactor).to.eql(data.expVolumeFactor);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct Source Factor\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Excel Source Factor = \" + data.expSourceFactor);\r",
							"    console.log(\"Rules Engine Source Factor = \" + jsonData.WRLSChargingResponse.sourceFactor);\r",
							"    pm.expect(jsonData.WRLSChargingResponse.sourceFactor).to.eql(data.expSourceFactor);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct Season Factor\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Excel Season Factor = \" + data.expSeasonFactor);\r",
							"    console.log(\"Rules Engine Season Factor = \" + jsonData.WRLSChargingResponse.seasonFactor);\r",
							"    pm.expect(jsonData.WRLSChargingResponse.seasonFactor).to.eql(data.expSeasonFactor);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct Loss Factor\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Excel Loss Factor = \" + data.expLossFactor);\r",
							"    console.log(\"Rules Engine Loss Factor = \" + jsonData.WRLSChargingResponse.lossFactor);\r",
							"    pm.expect(jsonData.WRLSChargingResponse.lossFactor).to.eql(data.expLossFactor);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct AbatementAdjustment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var expectedAA = data.expAbatementAdjustment;\r",
							"    if (expectedAA === '') {\r",
							"        expectedAA = null;\r",
							"    }\r",
							"    console.log(\"Excel AbatementAdjustment = \" + expectedAA);\r",
							"    console.log(\"Rules Engine AbatementAdjustment = \" + jsonData.WRLSChargingResponse.abatementAdjustment);\r",
							"  pm.expect(jsonData.WRLSChargingResponse.abatementAdjustment).to.eql(expectedAA);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct S127 Agreement Factor\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var expectedS127 = data.expS127Agreement;\r",
							"     if (expectedS127 === '') {\r",
							"        expectedS127 = null;\r",
							"    }\r",
							"    console.log(\"Excel S127 Agreement = \" + expectedS127);\r",
							"    console.log(\"Rules Engine S127 Agreement = \" + jsonData.WRLSChargingResponse.s127Agreement);\r",
							"   pm.expect(jsonData.WRLSChargingResponse.s127Agreement).to.eql(expectedS127);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct S130 Agreement Factor\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var expectedS130 = data.expS130Agreement;\r",
							"     if (expectedS130 === '') {\r",
							"        expectedS130 = null;\r",
							"    }\r",
							"    console.log(\"Excel S130 Agreement = \" + expectedS130);\r",
							"    console.log(\"Rules Engine S130 Agreement = \" + jsonData.WRLSChargingResponse.s130Agreement);\r",
							"   pm.expect(jsonData.WRLSChargingResponse.s130Agreement).to.eql(expectedS130);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct EIUC Source Factor\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Excel EIUC Source Factor = \" + data.expEiucSourceFactor);\r",
							"    console.log(\"Rules Engine EIUC Source Factor = \" + jsonData.WRLSChargingResponse.eiucSourceFactor);\r",
							"    pm.expect(jsonData.WRLSChargingResponse.eiucSourceFactor).to.eql(data.expEiucSourceFactor);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct EIUC Factor\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Excel EIUC Factor = \" + data.expEiucFactor);\r",
							"    console.log(\"Rules Engine EIUC Factor = \" + jsonData.WRLSChargingResponse.eiucFactor);\r",
							"    pm.expect(jsonData.WRLSChargingResponse.eiucFactor).to.eql(data.expEiucFactor);\r",
							"    console.log(\"END OF Iteration = \" + data.iteration);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "eaResAdmin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "resAdmin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"WRLSChargingRequest\": {\r\n  \t\"secondPartCharge\": {{secondPartCharge}},\r\n    \"compensationCharge\": {{compensationCharge}},\r\n    \"waterUndertaker\": {{waterUndertaker}},\r\n    \"volume\": \"{{volume}}\",\r\n    \"source\": \"{{source}}\",\r\n    \"eiucSource\": \"{{eiucSource}}\",\r\n    \"season\": \"{{season}}\",\r\n    \"loss\": \"{{loss}}\",\r\n    \"region\": \"{{region}}\",\r\n    \"abatementAdjustment\": \"{{abatementAdjustment}}\",\r\n    \"s127Agreement\": \"{{s127Agreement}}\",\r\n    \"s130Agreement\": \"{{s130Agreement}}\",\r\n    \"billableDays\": \"{{billableDays}}\",\r\n    \"abstractableDays\": \"{{abstractableDays}}\"\r\n  }\r\n}\r\n     "
				},
				"url": {
					"raw": "{{baseUrl}}/WRLS_Pre_SRoC_RuleApp/1.0/WRLS_Pre_SRoC_RuleSet_2018_19",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"WRLS_Pre_SRoC_RuleApp",
						"1.0",
						"WRLS_Pre_SRoC_RuleSet_2018_19"
					]
				}
			},
			"response": []
		}
	]
}